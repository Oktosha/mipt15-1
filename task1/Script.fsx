let art = 
    [
        ['@';'.';'.';'@';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.']
        ['.';'.';'@';'.';'.';'@';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.']
        ['.';'.';'.';'.';'@';'.';'.';'@';'.';'.';'@';'@';'@';'@';'@';'@';'@';'@';'@';'@';'@';'@']
        ['.';'.';'.';'.';'.';'.';'@';'.';'.';'@';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.']
        ['.';'.';'.';'.';'.';'.';'.';'.';'@';'.';'.';'@';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.']
        ['.';'.';'.';'.';'.';'.';'@';'.';'.';'@';'.';'.';'.';'@';'.';'.';'@';'@';'@';'@';'@';'@']
        ['.';'.';'.';'.';'@';'.';'.';'@';'.';'.';'.';'.';'.';'.';'.';'@';'.';'.';'.';'.';'.';'.']
        ['.';'.';'@';'.';'.';'@';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'@';'.';'.';'.';'.']
        ['@';'.';'.';'@';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'.';'@';'.';'.']
    ]

let flipH = List.rev
let flipV a = List.map List.rev a

let rec rotate90 a = 
    match a with
    | a when List.forall (fun x -> x = []) a -> []
    | a -> (List.rev (List.map List.head a)) :: (rotate90 (List.map List.tail a))

let rotate180 a = rotate90 a |> rotate90
let rotate270 a = rotate90 a |> rotate90 |> rotate90

let artPrint = List.iter (fun x -> List.iter (printf "%c") x; printf "\n")

artPrint art
artPrint (rotate180 art)